[tool.poetry]
name = "martian-adapters"
version = "6.6.2"
description = "Adapters as API gateways to Different LLM Models"
authors = ["Martian team <team@withmartian.com>"]
readme = "README.md"
packages = [{include = "adapters", from = "."}]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.9.5"
aiolimiter = "^1.1.0"
aiosignal = "^1.3.1"
anthropic = "0.36.2"
async-timeout = "^4.0.3"
attrs = "^24.2.0"
regex = "^2024.9.11"
requests = "^2.32.2"
pydantic = "^2.4.2"
openai = "1.52.0"
cohere = "5.11.1"
tabulate = "^0.9.0"
vertexai = "^1.70.0"
google-generativeai = "^0.8.3"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.2"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.23.8"
pytest-recording = "^0.13.2"
pylint = "^3.2.5"
mypy = "^1.11.0"
vcrpy = "^6.0.1"
ruff = "^0.3.4"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^3.7.1"

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["F403", "F401", "F405", "E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = false
force-sort-within-sections = true
combine-as-imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
