interactions:
- request:
    body: '{"model": "mistral-7b", "prompt": "Hi", "stop": "stop"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '55'
      content-type:
      - application/json
      host:
      - mistral-7b.lepton.run
      user-agent:
      - AsyncOpenAI/Python 1.47.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.47.1
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.10
    method: POST
    uri: https://mistral-7b.lepton.run/api/v1/completions
  response:
    body:
      string: '{"id":"cmpl-8tLqt2wwN3y7E2HCnLFMFh","object":"text_completion","created":1734126434,"model":"mistral-7b","choices":[{"index":0,"text":",\n
        QTimer *timer = new QTimer(this);\n connect(timer, SIGNAL(timeout()), this,
        SLOT(update()));\n\n timer->start(200);\n```\n\nThis example sets up a timer
        which fires every 200 milliseconds, updating the window every time the timer
        fires.\n\n#### QTimer::start()\n\nStarts the timer. The start value is the
        number of milliseconds between timer signals.\n\n```cpp\nvoid QTimer::start(int
        msec)\n```\n\n#### QTimer::","logprobs":null,"finish_reason":"stop","audio":null}],"usage":{"prompt_tokens":1,"total_tokens":126,"completion_tokens":125}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8f1926c5efc415d2-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Fri, 13 Dec 2024 21:47:15 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      content-length:
      - '678'
      vary:
      - Accept-Encoding
      x-envoy-upstream-service-time:
      - '1398'
    status:
      code: 200
      message: OK
version: 1
