interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"}]}],
      "model": "Qwen/Qwen1.5-1.8B-Chat"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '112'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.14.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.14.1
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"8790ffda78bccf8b-SJC","object":"chat.completion","created":1713908296,"model":"Qwen/Qwen1.5-1.8B-Chat","prompt":[],"choices":[{"finish_reason":"eos","logprobs":null,"index":0,"message":{"role":"assistant","content":"I''m
        sorry, but you haven''t provided any information about the object you are
        referring to. Can you please provide more context or clarify what you are
        trying to say? \n\nIf you are referring to a JavaScript object, it is a data
        structure that represents a collection of key-value pairs. Objects can have
        properties and methods, and their values can be of different data types such
        as strings, numbers, booleans, arrays, objects, and more.\n\nHere''s an example
        of a simple JavaScript object:\n\n```javascript\nlet person = {\n  name: \"John\",\n  age:
        30,\n  occupation: \"Software Engineer\",\n  hobbies: [\"reading\", \"playing
        guitar\"],\n  address: {\n    street: \"123 Main St\",\n    city: \"Anytown\",\n    state:
        \"CA\",\n    zip: \"12345\"\n  }\n};\n```\n\nIn this example, the `person`
        object has five properties: `name`, `age`, `occupation`, `hobbies`, and `address`.
        The `name` property is a string, the `age` property is a number, the `occupation`
        property is a string, the `hobbies` property is an array of strings, and the
        `address` property is an object with three properties: `street`, `city`, and
        `state`. \n\nYou can access the values of these properties using dot notation
        or bracket notation:\n\n```javascript\nconsole.log(person.name);  // Output:
        John\nconsole.log(person.age);  // Output: 30\nconsole.log(person.occupation);  //
        Output: Software Engineer\nconsole.log(person.hobbies);  // Output: [\"reading\",
        \"playing guitar\"]\nconsole.log(person.address.street);  // Output: 123 Main
        St\nconsole.log(person.address.city);  // Output: Anytown\nconsole.log(person.address.state);  //
        Output: CA\nconsole.log(person.address.zip);  // Output: 12345\n```\n\nI hope
        this helps! Let me know if you have any further questions."}}],"usage":{"prompt_tokens":22,"completion_tokens":421,"total_tokens":443}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8790ffda78bccf8b-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 23 Apr 2024 21:38:16 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '2046'
      etag:
      - '"wa8m1aymeb1ku"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-04-23T21:38:16.916Z'
      x-api-call-start:
      - '2024-04-23T21:38:14.822Z'
      x-api-received:
      - '2024-04-23T21:38:14.816Z'
      x-compute-characters:
      - '122'
      x-compute-time:
      - '1964'
      x-hostname:
      - qwen-qwen1-5-1-8b-chat-6bd7b75556-l7t7s
      x-inference-time:
      - '1963'
      x-inference-version:
      - v2
      x-queue-time:
      - '0'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '199'
      x-ratelimit-reset:
      - '2'
      x-time-per-token:
      - '4'
      x-total-time:
      - '1964'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
