interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"}]}],
      "model": "garage-bAInd/Platypus2-70B-instruct"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.14.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.14.1
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"8790feb35b66cf8b-SJC","object":"chat.completion","created":1713908253,"model":"garage-bAInd/Platypus2-70B-instruct","prompt":[],"choices":[{"finish_reason":"eos","logprobs":null,"index":0,"message":{"role":"assistant","content":"This
        is an object in JavaScript. It is a collection of key-value pairs, where each
        key is a unique identifier and the value can be any type of data. Objects
        are commonly used to store and organize data in a structured way.\n\nTo access
        the properties of an object, you can use dot notation or bracket notation.
        For example, if the object has a property named \"name\" with a value of \"John
        Doe\", you can access it using `object.name` or `object[\"name\"]`.\n\nHere''s
        an example of an object with some properties:\n\n```javascript\nconst person
        = {\n  name: \"John Doe\",\n  age: 35,\n  occupation: \"Software Engineer\"\n};\n\nconsole.log(person.name);
        // Output: John Doe\nconsole.log(person[\"age\"]); // Output: 35\n```\n\nIn
        this example, the `person` object has three properties: `name`, `age`, and
        `occupation`. You can access these properties using their respective keys."}}],"usage":{"prompt_tokens":17,"completion_tokens":232,"total_tokens":249}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8790feb35b66cf8b-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 23 Apr 2024 21:37:33 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1193'
      etag:
      - '"9ufedx82xdx5"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-04-23T21:37:33.826Z'
      x-api-call-start:
      - '2024-04-23T21:37:27.614Z'
      x-api-received:
      - '2024-04-23T21:37:27.605Z'
      x-compute-characters:
      - '48'
      x-compute-time:
      - '6118'
      x-hostname:
      - garage-baind-platypus2-70b-instruct-759d44f498-d5mkp
      x-inference-time:
      - '6117'
      x-inference-version:
      - v2
      x-queue-time:
      - '0'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '199'
      x-ratelimit-reset:
      - '2'
      x-time-per-token:
      - '26'
      x-total-time:
      - '6118'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
