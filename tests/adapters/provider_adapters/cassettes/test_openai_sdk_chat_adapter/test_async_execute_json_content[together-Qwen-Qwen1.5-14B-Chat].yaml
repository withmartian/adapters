interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"}]}],
      "model": "Qwen/Qwen1.5-14B-Chat"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '111'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.14.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.14.1
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"8790fff388a0cf8b-SJC","object":"chat.completion","created":1713908300,"model":"Qwen/Qwen1.5-14B-Chat","prompt":[],"choices":[{"finish_reason":"eos","logprobs":null,"index":0,"message":{"role":"assistant","content":"The
        provided input \"[object Object]\" is a JavaScript representation of a JSON
        object. When you see this in the console or a JSON string, it means that there
        is an object with properties, but the specific properties are not displayed
        due to the object''s nature. To see the actual content, you would need to
        parse the object, usually by converting it to a JavaScript object using `JSON.parse()`
        or by accessing it directly if it''s already a JavaScript object.\n\nFor example:\n\n```javascript\nlet
        jsonString = ''{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}'';\nlet
        obj = JSON.parse(jsonString);\nconsole.log(obj); // Output: {name: \"John\",
        age: 30, city: \"New York\"}\n```\n\nIn this case, the `obj` variable would
        display the properties of the JSON object. If you have the object directly,
        you can access its properties like `obj.name`, `obj.age`, etc."}}],"usage":{"prompt_tokens":22,"completion_tokens":199,"total_tokens":221}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8790fff388a0cf8b-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 23 Apr 2024 21:38:20 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1167'
      etag:
      - '"vi1zysonczwf"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-04-23T21:38:20.815Z'
      x-api-call-start:
      - '2024-04-23T21:38:18.839Z'
      x-api-received:
      - '2024-04-23T21:38:18.832Z'
      x-compute-characters:
      - '122'
      x-compute-time:
      - '1884'
      x-hostname:
      - qwen-qwen1-5-14b-chat-7867f6d4b9-vn76j
      x-inference-time:
      - '1884'
      x-inference-version:
      - v2
      x-queue-time:
      - '0'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '197'
      x-ratelimit-reset:
      - '0'
      x-time-per-token:
      - '9'
      x-total-time:
      - '1884'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
